swagger: "2.0"
info:
  version: "2.0.0"
  title: "Hotel Audit System API"
  description: "Please consider that resources with a lock require a valid secretKey query parameter on the /v1 path (\"v1_auth\") and a valid JWT access token (\"v2_auth_query\" or \"v2_auth_header\") on the /v2 path."
  contact:
    email: "martin.biermann@hrs.com"
host: "api.hotel-audit.hrs.com"
x-google-endpoints:
- name: "api.hotel-audit.hrs.com"
  allowCors: True
schemes:
- "https"
paths:
  /v1/hotel-status:
    get:
      tags:
      - "v1"
      deprecated: true
      summary: ""
      description: ""
      operationId: "getHotelStatus"
      produces:
      - "application/json"
      parameters:
      - name: "hkeys"
        in: "query"
        description: "Comma-separated list of hkeys"
        required: true
        type: "string"
      responses:
        "200":
          description: "Successful operation"
        "401":
          description: "Unauthorized access"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
      security:
      - v1_auth: []
  /v1/reports/hs-report:
    get:
      tags:
      - "v1"
      deprecated: true
      summary: ""
      description: ""
      operationId: "getHotelReport"
      produces:
      - "application/octet-stream"
      responses:
        "200":
          description: "Successful operation"
        "401":
          description: "Unauthorized access"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
      security:
      - v1_auth: []
  /v1/invitations/hotels:
    get:
      tags:
      - "v1"
      deprecated: true
      summary: "Pagination on Clean & Safe invitations"
      description: "Paginated listing of Clean & Safe invitations"
      operationId: "getHotelInvitations"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Number of page"
        required: true
        type: "integer"
        minimum: 1
        default: 1
      - name: "size"
        in: "query"
        description: "Number of results per page"
        required: true
        type: "integer"
        minimum: 1
        maximum: 500
      responses:
        "200":
          description: "Successful operation"
        "401":
          description: "Unauthorized access"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
      security:
      - v1_auth: []
  /v1/audits:
    get:
      tags:
      - "v1"
      deprecated: true
      summary: ""
      description: ""
      operationId: "getAudits"
      produces:
      - "application/json"
      parameters:
      - name: "hkeys"
        in: "query"
        description: "Comma-separated list of hkeys"
        required: true
        type: "string"
      responses:
        "200":
          description: "Successful operation"
        "401":
          description: "Unauthorized access"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
      security:
      - v1_auth: []
  /v1/audits/report:
    get:
      tags:
      - "v1"
      deprecated: true
      summary: "Pagination on Clean & Safe audits"
      description: "Paginated listing of Clean & Safe audit reports"
      operationId: "getAuditReports"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Number of page"
        required: true
        type: "integer"
        minimum: 1
        default: 1
      - name: "size"
        in: "query"
        description: "Number of results per page"
        required: true
        type: "integer"
        minimum: 1
        maximum: 500
      - name: "where"
        in: "query"
        description: "Filter on updated date field of audit reports in format YYYY-MM-DD"
        type: "string"
      responses:
        "200":
          description: "Successful operation"
        "401":
          description: "Unauthorized access"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
      security:
      - v1_auth: []
  /v1/audits/report/touchlessstay:
    get:
      tags:
      - "v1"
      deprecated: true
      summary: "Pagination on Touchless Stay audits"
      description: "Paginated listing of Touchless Stay audit reports"
      operationId: "getTouchlessStayReports"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Number of page"
        required: true
        type: "integer"
        minimum: 1
        default: 1
      - name: "size"
        in: "query"
        description: "Number of results per page"
        required: true
        type: "integer"
        minimum: 1
        maximum: 500
      - name: "where"
        in: "query"
        description: "Filter on updated date field of audit reports in format YYYY-MM-DD"
        type: "string"
      responses:
        "200":
          description: "Successful operation"
        "401":
          description: "Unauthorized access"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
      security:
      - v1_auth: []
  /v1/cs_cert/{code}:
    get:
      tags:
      - "v1"
      summary: "Clean & Safe Certificate"
      description: "Clean & Safe Certificate"
      operationId: "getCleanSafeCert"
      produces:
      - "text/html"
      parameters:
      - name: "code"
        in: "path"
        description: "Request code of certificate"
        type: "string"
        required: true
      responses:
        "200":
          description: "Successful operation"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
  /v1/cs_widget/{type}/{code}:
    get:
      tags:
      - "v1"
      summary: "Clean & Safe Widget"
      description: "Clean & Safe Widget"
      operationId: "getCleanSafeWidget"

      produces:
      - "image/png"
      parameters:
      - name: "type"
        in: "path"
        description: "Type of widget"
        type: "string"
        required: true
      - name: "code"
        in: "path"
        description: "Request code of widget"
        type: "string"
        required: true
      responses:
        "200":
          description: "Successful operation"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
  /v1/cs_sticker/{type}/{code}:
    get:
      tags:
      - "v1"
      summary: "Clean & Safe Sticker"
      description: "Clean & Safe Sticker"
      operationId: "getCleanSafeSticker"

      produces:
      - "application/pdf"
      parameters:
      - name: "type"
        in: "path"
        description: "Type of widget"
        type: "string"
        required: true
      - name: "code"
        in: "path"
        description: "Request code of widget"
        type: "string"
        required: true
      responses:
        "200":
          description: "Successful operation"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
  /v1/cs_widget_link/{type}/{code}:
    get:
      tags:
      - "v1"
      summary: "Clean & Safe Widget Link Redirect"
      description: "Clean & Safe Link Redirect"
      operationId: "getCleanSafeLink"

      parameters:
      - name: "type"
        in: "path"
        description: "Type of widget"
        type: "string"
        required: true
      - name: "code"
        in: "path"
        description: "Request code of widget"
        type: "string"
        required: true
      responses:
        "302":
          description: "Successful operation"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
  /auth/login:
    post:
      tags:
      - "v2"
      operationId: "postAuthLogin"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/TokenRequest"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TokenResponse"
    options:
      tags:
      - "v2"
      operationId: "corsPostAuthLogin"
      responses:
        '204':
          description: "Successful operation"
  /auth/refresh:
    post:
      tags:
      - "v2"
      operationId: "postAuthRefresh"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/RefreshTokenRequest"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RefreshTokenResponse"
  /auth/jwt-test:
    get:
      tags:
      - "v2"
      operationId: "getJWTTest"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/JWTTestResponse"
        "401":
          description: "Unauthorized access"
      security:
      - v2_auth_query: []
      - v2_auth_header: []
  /v2/hotel-status:
    get:
      tags:
      - "v2"
      summary: ""
      description: ""
      operationId: "getHotelStatusV2"
      produces:
      - "application/json"
      parameters:
      - name: "hkeys"
        in: "query"
        description: "Comma-separated list of hkeys"
        required: true
        type: "string"
      - name: "backfill"
        in: "query"
        description: "Optional flag to provide calculated Green Stay record based on similar hotels, if no actual record exists for the hotel."
        type: "boolean"
      - name: "client_key"
        in: "query"
        description: "Optional key to use specific scoring configuration for Green Stay V2 audit records."
        type: "string"
        example: "fkey:31740"
      responses:
        "200":
          description: "Successful operation"
        "401":
          description: "Unauthorized access"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
      security:
      - v2_auth_query: []
      - v2_auth_header: []
  /v2/invitations/hotels:
    get:
      tags:
      - "v2"
      summary: "Pagination on Clean & Safe invitations"
      description: "Paginated listing of Clean & Safe invitations"
      operationId: "getHotelInvitationsV2"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Number of page"
        required: true
        type: "integer"
        minimum: 1
        default: 1
      - name: "size"
        in: "query"
        description: "Number of results per page"
        required: true
        type: "integer"
        minimum: 1
        maximum: 500
      responses:
        "200":
          description: "Successful operation"
        "401":
          description: "Unauthorized access"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
      security:
      - v2_auth_query: []
      - v2_auth_header: []
  /v2/audits:
    get:
      tags:
      - "v2"
      summary: ""
      description: ""
      operationId: "getAuditsV2"
      produces:
      - "application/json"
      parameters:
      - name: "hkeys"
        in: "query"
        description: "Comma-separated list of hkeys"
        required: true
        type: "string"
      - name: "exclude"
        in: "query"
        description: "Comma-separated list of audit categories to be excluded from response. Audit categories are 'touchless','cleansafe','green', 'gsi2', 'geosure' and 'checkin'."
        type: "string"
      - name: "include"
        in: "query"
        description: "Comma-separated list of audit categories to be included from response. Audit categories are 'touchless','cleansafe','green', 'gsi2', 'geosure' and 'checkin'."
        type: "string"
      - name: "backfill"
        in: "query"
        description: "Optional flag to provide calculated Green Stay record based on similar hotels, if no actual record exists for the hotel."
        required: false
        type: "boolean"
      - name: "client_key"
        in: "query"
        description: "Optional key to use specific scoring configuration for Green Stay V2 audit records."
        type: "string"
        example: "fkey:31740"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/definitions/GSI2AuditResponse"
          examples:
            application/json: {"9999998":[{"id":"85c1cb84-7150-4e3f-a83f-16a986a70949","created_date":"2022-07-28T12:22:39.000Z","updated_date":"2022-07-28T16:20:52.000Z","report_year":2019,"kilogramCarbonPOC":44.3212374407471,"literWaterPOC":21.825800591683155,"kilogramWastePOC":2.7533124908874362,"carbonClass":"A","waterClass":"A","wasteClass":"D","greenClass":"B","type":"green_stay_self_inspection_hero","status":true},,{"gs_id":"Q930405698","gs_distance":0.00004994672377396143,"date":"2022-07-31T10:00:05.000Z","gs_province":"North Rhine-Westphalia","gs_region":"European Union","gs_district":"Oespel","gs_city":"Dortmund","gs_country":"Germany","gs_type":"None","gs_countrycode":"DE","gs_population":0,"composite":78,"nightime":74,"physical":81,"women":78,"theft":65,"freedom":82,"health":72,"lgbtq":76,"type":"geosure","status":true}]}
        "401":
          description: "Unauthorized access"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
      security:
      - v2_auth_query: []
      - v2_auth_header: []
    options:
      tags:
      - "v2"
      operationId: "corsGetAuditsV2"
      responses:
        '204':
          description: "Successful operation"
  /v2/audits/report:
    get:
      tags:
      - "v2"
      summary: "Pagination on Clean & Safe audits"
      description: "Paginated listing of Clean & Safe audit reports"
      operationId: "getAuditReportsV2"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Number of page"
        required: true
        type: "integer"
        minimum: 1
        default: 1
      - name: "size"
        in: "query"
        description: "Number of results per page"
        required: true
        type: "integer"
        minimum: 1
        maximum: 500
      - name: "where"
        in: "query"
        description: "Filter on updated date field of audit reports in format YYYY-MM-DD"
        type: "string"
      responses:
        "200":
          description: "Successful operation"
        "401":
          description: "Unauthorized access"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
      security:
      - v2_auth_query: []
      - v2_auth_header: []
  /v2/audits/report/touchlessstay:
    get:
      tags:
      - "v2"
      summary: "Pagination on Touchless Stay audits"
      description: "Paginated listing of Touchless Stay audit reports"
      operationId: "getTouchlessStayReportsV2"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Number of page"
        required: true
        type: "integer"
        minimum: 1
        default: 1
      - name: "size"
        in: "query"
        description: "Number of results per page"
        required: true
        type: "integer"
        minimum: 1
        maximum: 500
      - name: "where"
        in: "query"
        description: "Filter on updated date field of audit reports in format YYYY-MM-DD"
        type: "string"
      responses:
        "200":
          description: "Successful operation"
        "401":
          description: "Unauthorized access"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
      security:
      - v2_auth_query: []
      - v2_auth_header: []
  /v2/audits/report/green:
    get:
      tags:
      - "v2"
      summary: "Pagination on Green Stay audits"
      description: "Paginated listing of Green Stay audit reports"
      operationId: "getGreenStayAuditReportsV2"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Number of page"
        required: true
        type: "integer"
        minimum: 1
        default: 1
      - name: "size"
        in: "query"
        description: "Number of results per page"
        required: true
        type: "integer"
        minimum: 1
        maximum: 500
      - name: "since"
        in: "query"
        description: "Filter on updated date field of audit reports in format YYYY-MM-DD"
        type: "string"
      - name: "backfill"
        in: "query"
        description: "***For internal and educational purposes only - should not be used in public production environments.***\nOptional flag to provide calculated Green Stay record based on similar hotels, if no actual record exists for the hotel."
        required: false
        type: "boolean"
      responses:
        "200":
          description: "Successful operation"
        "401":
          description: "Unauthorized access"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
      security:
      - v2_auth_query: []
      - v2_auth_header: []
  /v2/audits/report/green_tracking:
    get:
      tags:
      - "v2"
      summary: "Pagination on Green Stay tracking records"
      description: "Paginated listing of Green Stay tracking records"
      operationId: "getGreenStayTrackingReportsV2"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Number of page"
        required: true
        type: "integer"
        minimum: 1
        default: 1
      - name: "size"
        in: "query"
        description: "Number of results per page"
        required: true
        type: "integer"
        minimum: 1
        maximum: 500
      - name: "where"
        in: "query"
        description: "Filter on updated date field of audit reports in format YYYY-MM-DD"
        type: "string"
      responses:
        "200":
          description: "Successful operation"
        "401":
          description: "Unauthorized access"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
      security:
      - v2_auth_query: []
      - v2_auth_header: []
  /v2/audits/report/green_exceptions:
    get:
      tags:
      - "v2"
      summary: "Pagination on Green Stay exception records"
      description: "Paginated listing of Green Stay exception records"
      operationId: "getGreenStayExceptionReportsV2"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Number of page"
        required: true
        type: "integer"
        minimum: 1
        default: 1
      - name: "size"
        in: "query"
        description: "Number of results per page"
        required: true
        type: "integer"
        minimum: 1
        maximum: 500
      - name: "since"
        in: "query"
        description: "Filter on updated date field of audit reports in format YYYY-MM-DD"
        type: "string"
      responses:
        "200":
          description: "Successful operation"
        "401":
          description: "Unauthorized access"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
      security:
      - v2_auth_query: []
      - v2_auth_header: []
  /v2/audits/green/reports/{id}:
    get:
      tags:
      - "v2"
      summary: "Green Stay Audit Report"
      description: "Green Stay Audit Report"
      operationId: "getGreenAuditReport"

      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Report ID"
        type: "string"
        required: true
      responses:
        "200":
          description: "Successful operation"
        "401":
          description: "Unauthorized access"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
      security:
      - v2_auth_query: []
      - v2_auth_header: []
  /v2/audits/report/geosure:
    get:
      tags:
      - "v2"
      summary: "Pagination on GeoSure audits"
      description: "Paginated listing of GeoSure audit reports"
      operationId: "getGeoSureAuditReportsV2"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Number of page"
        required: true
        type: "integer"
        minimum: 1
        default: 1
      - name: "size"
        in: "query"
        description: "Number of results per page"
        required: true
        type: "integer"
        minimum: 1
        maximum: 500
      - name: "since"
        in: "query"
        description: "Filter on updated date field of audit reports in format YYYY-MM-DD"
        type: "string"
      responses:
        "200":
          description: "Successful operation"
        "401":
          description: "Unauthorized access"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
      security:
      - v2_auth_query: []
      - v2_auth_header: []
  /v2/check-ins/{id}:
    get:
      tags:
      - "v2"
      summary: "Clean & Safe Check-in Configuration"
      description: "Clean & Safe Check-in Configuration"
      operationId: "getCheckin"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Check-in Configuration ID"
        type: "string"
        required: true
      responses:
        "200":
          description: "Successful operation"
        "401":
          description: "Unauthorized access"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
      security:
      - v2_auth_query: []
      - v2_auth_header: []
  /v2/gs_cert/{code}:
    get:
      tags:
      - "v2"
      summary: "Green Stay Certificate"
      description: "Green Stay Certificate"
      operationId: "getGreenStayCert"

      produces:
      - "text/html"
      parameters:
      - name: "code"
        in: "path"
        description: "Request code of certificate"
        type: "string"
        required: true
      responses:
        "200":
          description: "Successful operation"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
  /v2/gs_widget/{type}/{code}:
    get:
      tags:
      - "v2"
      summary: "Green Stay Widget"
      description: "Green Stay Widget"
      operationId: "getGreenStayWidget"
      produces:
      - "image/png"
      parameters:
      - name: "type"
        in: "path"
        description: "Type of widget"
        type: "string"
        required: true
      - name: "code"
        in: "path"
        description: "Request code of widget"
        type: "string"
        required: true
      responses:
        "200":
          description: "Successful operation"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
  /v2/gs_widget_link/{type}/{code}:
    get:
      tags:
      - "v2"
      summary: "Green Stay Widget Link Redirect"
      description: "Green Stay Link Redirect"
      operationId: "getGreenStayLink"
      parameters:
      - name: "type"
        in: "path"
        description: "Type of widget"
        type: "string"
        required: true
      - name: "code"
        in: "path"
        description: "Request code of widget"
        type: "string"
        required: true
      responses:
        "302":
          description: "Successful operation"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
  /v2/gs_sticker/{type}/{code}:
    get:
      tags:
      - "v2"
      summary: "Green Stay Sticker"
      description: "Green Stay Sticker"
      operationId: "getGreenStaySticker"
      produces:
      - "application/pdf"
      parameters:
      - name: "type"
        in: "path"
        description: "Type of widget"
        type: "string"
        required: true
      - name: "code"
        in: "path"
        description: "Request code of widget"
        type: "string"
        required: true
      responses:
        "200":
          description: "Successful operation"
        "403":
          description: "Forbidden"
        "500":
          description: "Server error"
securityDefinitions:
  v1_auth:
    type: "apiKey"
    name: "secretKey"
    in: "query"
  v2_auth_query:
    type: "apiKey"
    name: "token"
    in: "query"
  v2_auth_header:
    type: "apiKey"
    name: "x-access-token"
    in: "header"
definitions:
  JWTTestResponse:
    type: "object"
    properties:
      client_id:
        type: "string"
      iat:
        type: "integer"
        description: "Unix timestamp of time of issuance of the access token"
      exp:
        type: "integer"
        description: "Unix timestamp of time of expiry of the access token"
      grants:
        type: "array"
        items:
          type: string
  TokenRequest:
    type: "object"
    properties:
      client_id:
        type: "string"
      client_secret:
        type: "string"
  TokenResponse:
    type: "object"
    properties:
      status:
        type: "string"
        enum:
        - "Logged in"
      token:
        type: "string"
        description: "Access token (JWT)"
      refreshToken:
        type: "string"
        description: "Refresh token (JWT)"
  RefreshTokenRequest:
    type: "object"
    properties:
      client_id:
        type: "string"
      client_secret:
        type: "string"
      refreshToken:
        type: "string"
        description: "Refresh token (JWT)"
  RefreshTokenResponse:
    type: "object"
    properties:
      token:
        type: "string"
        description: "Access token (JWT)"
  
  GSI2AuditResponse:
    type: "object"
    properties:
      config_id:
        type: "number"
        description: "The scoring and weighting configuration applied. The configuration ID 0 presents the default configuration of HRS applied whenever no configuration key was provided to the request or no configuration could be found for a provided configuration key."
        default: 0
      assessment_level:
        type: "string"
        description: "The last highest assessment level completed by the property."
        enum: ["NONE", "BASIC_LEVEL", "ADV_LEVEL", "PRO_LEVEL"]
      scoring:
        type: "object"
        properties:
          score:
            type: "number"
          categories:
            type: "object"
            description: "Per cent score of points achieved on criteria confirmed per each of the eight environmental criteria category based on the points configured in the scoring configuration."
            properties:
              energy:
                type: "number"
              water:
                type: "number"
              waste:
                type: "number"
              biodiversity:
                type: "number"
              purchasing:
                type: "number"
              mobility:
                type: "number"
              carbon:
                type: "number"
          points:
            description: "Summary of points achieved from all possible points."
            type: "object"
            properties:
              is:
                type: "number"
              max:
                type: "number"
              percent:
                type: "number"
      verifications:
        type: "array"
        description: "List of verifications provided on the four area. Contains one or more verifications. Is not present when no verification is available."
        items:
          type: "string"
          enum: ["CARBON_FOOTPRINT", "WATER_FOOTPRINT", "WASTE_FOOTPRINT", "CRITERIA"]
      footprint:
        type: "object"
        properties:
          report_year:
            type: "number"
            enum: [2019,2021]
          kilogramCarbonPOC:
            type: "number"
          literWaterPOC:
            type: "number"
          kilogramWastePOC:
            type: "number"
          carbonClass:
            type: "string"
            enum: ["A","B","C","D"]
          waterClass:
            type: "string"
            enum: ["A","B","C","D"]
          wasteClass:
            type: "string"
            enum: ["A","B","C","D"]
          status:
            type: "boolean"
            description: "Indicates whether the audit was successful."
          type:
            type: "string"
            description: "The type of audit result. (<mode> number represents the backfilling mode applied.)"
            enum: ["green_stay_self_inspection", "green_stay_self_inspection_hero", "green_stay_blocked_filter", "green_stay_self_blocked_anomaly", "green_stay_not_applicable", "green_stay_backfill_mode_<mode>"]
      status:
        type: "boolean"
        description: "Indicates whether the audit was successful."
      type:
        type: "string"
        description: "The type of audit result. (<mode> number represents the backfilling mode applied.)"
        enum: ["gsi2_not_error", "gsi2_self_inspection", "gsi2_self_inspection_hero", "gsi2_backfill", "gsi2_backfill_hero"]